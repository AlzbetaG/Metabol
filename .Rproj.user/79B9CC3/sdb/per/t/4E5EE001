{
    "collab_server" : "",
    "contents" : "#' Logratio volcano plots\n#'\n#' Display logratio volcano plot comparing two specific groups.\n#' @param data Data table with variables (metabolites) in columns. Samples in rows are sorted according to specific groups.\n#' @param name A character string or expression indicating a name of data set. It occurs in names of every output.\n#' @param groupnames A character vector defining specific groups in data. Every string must be specific for each group and they must not overlap.\n#' @param type Parametric (\"par\" - default) or nonparametric (\"nonpar\") test must be chosen.\n#' @param tsf Data transformation must be defined by \"clr\" (default), \"log\" or \"none\". See Details.\n#' @param QCs logical. If FALSE (default) quality control samples (QCs) are automatically distinguished and skipped.\n#' @param hy Important points are evaluted on y-axis with this limit. The default is alpha=0.05 with Bonferroni correction.\n#' @param hx logical. If TRUE important points are evaluated from both, x-axis and y-axis. Default is FALSE.\n#' @param hhx If hx=TRUE, set the absolute value of the limit for most important differences of medians (deafult is 1.5).\n#' @details Data transformation: with \"clr\" clr trasformation is used (see References), with \"log\" natural logarithm is used, with \"none\" data are only scaled by Pareto scaling.\n#' @details Logratio volcano plot can be used only for comparison of two groups. If there is more groups in data, all possible combinations of pairs are evaluated.\n#' @details Logratio volcano plot is a version of standard volcano plot with difference of group medians on x-axis and -log10 of p-value from t-test or Wilcoxon test on y-axis.\n#' @details Up to eight different groups can be distinguished in data.\n#' @return Volcano plots.\n#' @return Excel sheet with differences of medians and p-values from chosen test.\n#' @importFrom stats t.test wilcox.test\n#' @importFrom robCompositions cenLR\n#' @import xlsx\n#' @references Aitchison, J. (1986) The Statistical Analysis of Compositional Data Monographs on Statistics and Applied Probability. Chapman & Hall Ltd., London (UK). p. 416.\n#' @export\nGraphsVolcano=function(data,name,groupnames,type=\"par\",tsf=\"clr\",QCs=FALSE,hy=(0.05/length(colnames(data))),hx=FALSE,hhx=1.5){\n\n    ##########################################################################################################################\n    if (tsf==\"clr\"){\n        dataM=cenLR(data)$x.clr\n    }\n\n    if (tsf==\"log\"){\n        dataM=log(data)\n    }\n\n    if (tsf==\"none\"){\n        dataM=scale(data, scale=TRUE, center=FALSE)\n    }\n    ####################################################################################################\n    count=length(groupnames)\n    groupss=matrix(rep(NA,count*2),ncol=2)\n    colnames(groupss)=c(\"min\",\"max\")\n    rownames(groupss)=groupnames\n    groups=NULL\n    for (i in 1:count){\n        Gr=grep(groupnames[i],rownames(dataM))\n        groupss[i,1]=min(Gr)\n        groupss[i,2]=max(Gr)\n        gr=rep(i,length(Gr))\n        groups=c(groups,gr)\n    }\n\n##########################################################################################################################\nif (QCs==FALSE){\n    QC=grep(\"QC\",rownames(dataM))\n    if (length(QC)!=0){\n        dataM=dataM[-QC,]\n        groups=groups[-QC]\n        groupnames=groupnames[unique(groups)]\n        count=length(groupnames)\n        groupss=matrix(rep(NA,count*2),ncol=2)\n        colnames(groupss)=c(\"min\",\"max\")\n        rownames(groupss)=groupnames\n        for (i in 1:count){\n            Gr=grep(groupnames[i],rownames(dataM))\n            groupss[i,1]=min(Gr)\n            groupss[i,2]=max(Gr)\n        }\n    }\n}\n    ####################################################################################################\n    if (type == \"par\") {\n    dirout = paste(getwd(),\"/\",sep = \"\")\n    PDF1=paste(dirout,\"Volcano_par_\",name,\".pdf\",sep=\"\")\n\n    wb <- createWorkbook(type = \"xlsx\")\n    sheet1  <- createSheet(wb, sheetName = \"T-test\")\n    sheet2  <- createSheet(wb, sheetName = \"Diff of med\")\n\n    file00=paste(dirout, \"Volcano_par_\",name,\".xlsx\",sep=\"\")\n\n    ####################################################################################################\n    names<-colnames(dataM)\n\n    #t-test:\n\n    pvaluew=NULL\n    for(k in 1:(ncol(dataM))){\n        pvaluew2=NULL\n        for(i in 1:(nrow(groupss)-1)){\n            A=as.matrix(dataM[groupss[i,1]:groupss[i,2],k])\n            for(j in (i+1):nrow(groupss)){\n                B=as.matrix(dataM[groupss[j,1]:groupss[j,2],k])\n                c=t.test(A,B,alternative = \"two.sided\")$p.value\n                pvaluew2=cbind(pvaluew2,c)\n            }\n        }\n        pvaluew=rbind(pvaluew,pvaluew2)\n    }\n\n    nazvy=NULL\n    for(i in 1:(nrow(groupss)-1)){\n        for(j in (i+1):nrow(groupss)){\n            col=paste(groupnames[i],\"_\",groupnames[j],sep=\"\")\n            nazvy=c(nazvy,col)\n        }\n    }\n\n    colnames(pvaluew)=nazvy\n    row.names(pvaluew)=names\n\n    addDataFrame(pvaluew, sheet1, col.names=TRUE, row.names=TRUE,\n                 startRow=1, startColumn=1, colStyle=NULL, colnamesStyle=NULL,\n                 rownamesStyle=NULL, showNA=FALSE, characterNA=\"\", byrow=FALSE)\n\n    ####################################################################################################\n    #Difference of medians:\n    med=matrix(c(rep(0,ncol(dataM)*length(unique(groups)))),nrow=ncol(dataM))\n    rownames(med)=colnames(dataM)\n    colnames(med)=groupnames\n\n    for(i in 1:ncol(dataM)){\n        dataS=dataM[,i]\n        groups=groups\n        med[i,]=tapply(dataS, groups, median)\n        }\n\n    rozdily=NULL\n    for(i in 1:(ncol(med)-1)){\n        a=med[,i]\n        for(j in (i+1):ncol(med)){\n            b=med[,j]\n            c=a-b\n            rozdily=cbind(rozdily,c)\n        }\n    }\n\n    colnames(rozdily)=nazvy\n\n    addDataFrame(rozdily, sheet2, col.names=TRUE, row.names=TRUE,\n                 startRow=1, startColumn=1, colStyle=NULL, colnamesStyle=NULL,\n                 rownamesStyle=NULL, showNA=FALSE, characterNA=\"\", byrow=FALSE)\n    saveWorkbook(wb, file = file00)\n\n    if (hx == TRUE) {\n\n    hranicex=hhx\n    hranicey=hy\n\n    pdf((PDF1),width=10,height=10)\n    par(mar = c(4, 4, 6, 4) + 0.1,oma=c(1,1,1,1))\n    for(i in 1:ncol(pvaluew)){\n        plot(rozdily[,i],-log10(pvaluew[,i]),pch=16,main=colnames(pvaluew)[i],xlab=\"Difference of medians\",ylab=\"-log10(p-value)\")\n        abline(v=0,col=\"gray\")\n        text(rozdily[,i],-log10(pvaluew[,i]),labels=rownames(pvaluew),pos=4,cex=0.7)\n        barevne=which(((abs(rozdily[,i])) > hranicex) & (pvaluew[,i] < hranicey))\n        points(rozdily[barevne,i],-log10(pvaluew[barevne,i]),col=\"red\",pch=17,cex=1.25)\n        #text(rozdily[barevne,i],-log(pvaluew[barevne,i]),labels=rownames(pvaluew)[barevne],pos=4,cex=0.7,col=\"red\")\n        }\n    dev.off()\n    }\n\n    if (hx == FALSE) {\n\n        hranicey=hy\n\n        pdf((PDF1),width=10,height=10)\n        par(mar = c(4, 4, 6, 4) + 0.1,oma=c(1,1,1,1))\n        for(i in 1:ncol(pvaluew)){\n            plot(rozdily[,i],-log10(pvaluew[,i]),pch=16,main=colnames(pvaluew)[i],xlab=\"Difference of medians\",ylab=\"-log10(p-value)\")\n            abline(v=0,col=\"gray\")\n            text(rozdily[,i],-log10(pvaluew[,i]),labels=rownames(pvaluew),pos=4,cex=0.7)\n            barevne=which(pvaluew[,i] < hranicey)\n            points(rozdily[barevne,i],-log10(pvaluew[barevne,i]),col=\"red\",pch=17,cex=1.25)\n            #text(rozdily[barevne,i],-log(pvaluew[barevne,i]),labels=rownames(pvaluew)[barevne],pos=4,cex=0.7,col=\"red\")\n        }\n        dev.off()\n    }\n\n    }\n####################################################################################################\n####################################################################################################\n    if (type == \"nonpar\") {\n        dirout = paste(getwd(),\"/\",sep = \"\")\n        PDF1=paste(dirout,\"Volcano_nonpar_\",name,\".pdf\",sep=\"\")\n\n        wb <- createWorkbook(type = \"xlsx\")\n        sheet1  <- createSheet(wb, sheetName = \"Wilcoxon\")\n        sheet2  <- createSheet(wb, sheetName = \"Diff of med\")\n\n        file00=paste(dirout, \"Volcano_nonpar_\",name,\".xlsx\",sep=\"\")\n\n        ####################################################################################################\n        names<-colnames(dataM)\n\n        #Wilcoxon test:\n\n        pvaluew=NULL\n        for(k in 1:(ncol(dataM))){\n            pvaluew2=NULL\n            for(i in 1:(nrow(groupss)-1)){\n                A=as.matrix(dataM[groupss[i,1]:groupss[i,2],k])\n                for(j in (i+1):nrow(groupss)){\n                    B=as.matrix(dataM[groupss[j,1]:groupss[j,2],k])\n                    c=wilcox.test(A,B,alternative = \"two.sided\")$p.value\n                    pvaluew2=cbind(pvaluew2,c)\n                }\n            }\n            pvaluew=rbind(pvaluew,pvaluew2)\n        }\n\n        nazvy=NULL\n        for(i in 1:(nrow(groupss)-1)){\n            for(j in (i+1):nrow(groupss)){\n                col=paste(groupnames[i],\"_\",groupnames[j],sep=\"\")\n                nazvy=c(nazvy,col)\n            }\n        }\n\n        colnames(pvaluew)=nazvy\n        row.names(pvaluew)=names\n\n        addDataFrame(pvaluew, sheet1, col.names=TRUE, row.names=TRUE,\n                     startRow=1, startColumn=1, colStyle=NULL, colnamesStyle=NULL,\n                     rownamesStyle=NULL, showNA=FALSE, characterNA=\"\", byrow=FALSE)\n\n        ####################################################################################################\n        #Difference of medians:\n        med=matrix(c(rep(0,ncol(dataM)*length(unique(groups)))),nrow=ncol(dataM))\n        rownames(med)=colnames(dataM)\n        colnames(med)=groupnames\n\n        for(i in 1:ncol(dataM)){\n            dataS=dataM[,i]\n            groups=groups\n            med[i,]=tapply(dataS, groups, median)\n        }\n\n\n        rozdily=NULL\n        for(i in 1:(ncol(med)-1)){\n            a=med[,i]\n            for(j in (i+1):ncol(med)){\n                b=med[,j]\n                c=a-b\n                rozdily=cbind(rozdily,c)\n            }\n        }\n\n        colnames(rozdily)=nazvy\n\n        addDataFrame(rozdily, sheet2, col.names=TRUE, row.names=TRUE,\n                     startRow=1, startColumn=1, colStyle=NULL, colnamesStyle=NULL,\n                     rownamesStyle=NULL, showNA=FALSE, characterNA=\"\", byrow=FALSE)\n        saveWorkbook(wb, file = file00)\n\n        hranicex=hhx\n        hranicey=hy\n\n        if (hx == TRUE) {\n\n            hranicex=hx\n            hranicey=hy\n\n            pdf((PDF1),width=10,height=10)\n            par(mar = c(4, 4, 6, 4) + 0.1,oma=c(1,1,1,1))\n            for(i in 1:ncol(pvaluew)){\n                plot(rozdily[,i],-log10(pvaluew[,i]),pch=16,main=colnames(pvaluew)[i],xlab=\"Difference of medians\",ylab=\"-log10(p-value)\")\n                abline(v=0,col=\"gray\")\n                text(rozdily[,i],-log10(pvaluew[,i]),labels=rownames(pvaluew),pos=4,cex=0.7)\n                barevne=which(((abs(rozdily[,i])) > hranicex) & (pvaluew[,i] < hranicey))\n                points(rozdily[barevne,i],-log10(pvaluew[barevne,i]),col=\"red\",pch=17,cex=1.25)\n                #text(rozdily[barevne,i],-log(pvaluew[barevne,i]),labels=rownames(pvaluew)[barevne],pos=4,cex=0.7,col=\"red\")\n            }\n            dev.off()\n        }\n\n        if (hx == FALSE) {\n\n            hranicey=hy\n\n            pdf((PDF1),width=10,height=10)\n            par(mar = c(4, 4, 6, 4) + 0.1,oma=c(1,1,1,1))\n            for(i in 1:ncol(pvaluew)){\n                plot(rozdily[,i],-log10(pvaluew[,i]),pch=16,main=colnames(pvaluew)[i],xlab=\"Difference of medians\",ylab=\"-log10(p-value)\")\n                abline(v=0,col=\"gray\")\n                text(rozdily[,i],-log10(pvaluew[,i]),labels=rownames(pvaluew),pos=4,cex=0.7)\n                barevne=which(pvaluew[,i] < hranicey)\n                points(rozdily[barevne,i],-log10(pvaluew[barevne,i]),col=\"red\",pch=17,cex=1.25)\n                #text(rozdily[barevne,i],-log(pvaluew[barevne,i]),labels=rownames(pvaluew)[barevne],pos=4,cex=0.7,col=\"red\")\n            }\n            dev.off()\n        }\n\n    }\n}\n\n",
    "created" : 1495800339918.000,
    "dirty" : false,
    "encoding" : "CP1250",
    "folds" : "",
    "hash" : "352155829",
    "id" : "4E5EE001",
    "lastKnownWriteTime" : 1495800376,
    "last_content_update" : 1495800376033,
    "path" : "C:/Users/Alzbetka/Prace/Data/Labina/Package/MetaboAnal/R/GraphsVolcano.R",
    "project_path" : "R/GraphsVolcano.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}