{
    "collab_server" : "",
    "contents" : "#' Quality control samples (QCs) checking\n#'\n#' Quality control samples (QCs) are checked to data irregularities. It is used to data from untargeted metabolomic analysis.\n#' @param data Data table with variables (metabolites) in columns. Samples in rows are sorted according to specific groups.\n#' @param name A character string or expression indicating a name of data set. It occurs in names of every output.\n#' @param groupnames A character vector defining specific groups in data. Every string must be specific for each group and they must not overlap.\n#' @details Values of QCs are evaluated and questionable values for particular variables are denoted. There are two steps of evaluation: 1. QCs with completely higher values than the maximum of data, 2. QCs higher than majority of data.\n#' @details Up to eight different groups can be distinguished in data.\n#' @return Boxplots of QCs and the other data groups.\n#' @return Excel file with the list of questionable variables from two steps of evaluation.\n#' @import xlsx\n#' @export\nbigQC=function(data,name,groupnames){\n\n    ################################################################################################################################\n    #data=as.matrix(data)\n\n    ##########################################################################################################################\n    basecolor=c(\"blue\",\"magenta\",\"forestgreen\",\"darkorange\",\"deepskyblue\",\"mediumaquamarine\",\"lightslateblue\",\"saddlebrown\")\n    basemarks=c(15,17,18,8,11,2,0,16)\n\n    count=length(groupnames)\n    groups=NULL\n    marks=NULL\n    color=NULL\n    for (i in 1:count){\n        Gr=grep(groupnames[i],rownames(data))\n        gr=rep(i,length(Gr))\n        groups=c(groups,gr)\n        zn=rep(basemarks[i],length(Gr))\n        marks=c(marks,zn)\n        cl=rep(basecolor[i],length(Gr))\n        color=c(color,cl)\n    }\n################################################################################################################################\n# denoting of QCs\n\nQCi=grep(\"QC\",rownames(data))\ndataQC=data[QCi,]\n\n################################################################################################################################\n# rule 1 - comparison of maximum of samples and minimum of QCs\n\nrule1=matrix(rep(NA,ncol(data)),ncol=1)\nfor(i in 1:ncol(data)){\n    maxs=max(data[-QCi,i])\n    b=boxplot(data[QCi,i] ~ groups[QCi], names=groupnames[1],main=colnames(data)[i],notch=FALSE,plot=FALSE)\n    minQC=b$stats[1,1]\n    if (maxs<minQC){\n        rule1[i,1]=1\n    } else {\n        rule1[i,1]=0\n    }\n}\n\nrownames(rule1)=colnames(data)\n\nhead(rule1)\n\nidxrule1 = which(rule1 == 1)\n\nif (length(idxrule1) != 0) {\n    data2=data[,-idxrule1]\n} else {\n    data2 = data}\n\ndataout=data[,idxrule1]\n\nif (length(dataout)!=0){\nwrite.xlsx(dataout,file = paste(\"Box_out_rule_1_\",name,\".xlsx\",sep=\"\"),sheetName=\"Out\",\n           col.names=TRUE, row.names=TRUE, append=FALSE, showNA=TRUE)\n\nlabels=rownames(dataout)\n\npdf(paste(\"Box_out_rule_1_\",name,\".pdf\",sep=\"\"))\nfor(i in 1:ncol(dataout)){\n    boxplot(dataout[,i] ~ groups, names=groupnames,main=colnames(dataout)[i],notch=TRUE,outpch = NA)\n    text(groups,dataout[,i],label=labels,col=\"red\",cex=0.5)\n}\ndev.off()\n}else{print(\"No questionable QCs in rule 1.\")}\n\n\n################################################################################################################################\n# rule 2 - QCs higher than majority of data (some samples are higher than QCs)\n\nrule2=matrix(rep(NA,ncol(data2)*1),ncol=1)\nfor(i in 1:ncol(data2)){\n    b=boxplot(data2[,i] ~ groups, names=groupnames,main=colnames(data2)[i],notch=FALSE,plot=FALSE)\n    qc=grep(\"QC\",groupnames)\n    cAQC=b$conf[1,qc]\n    cBs=max(b$stats[4,-qc])\n\n    if (cAQC>cBs){\n        rule2[i,1]=1\n        } else {\n        rule2[i,1]=0\n        }\n}\n\nrownames(rule2)=colnames(data2)\n\nhead(rule2)\n\nidxrule2 = which(apply(rule2,1,sum) == 1)\n\nif (length(idxrule2) != 0) {\n    data3=data2[,-idxrule2]\n} else {\n    data3 = data2}\n\ndataout2=data2[,idxrule2]\n\nif (length(dataout2)!=0){\nwrite.xlsx(dataout2,file = paste(\"Box_out_rule_2_\",name,\".xlsx\",sep=\"\"),sheetName=\"Out\",\n           col.names=TRUE, row.names=TRUE, append=FALSE, showNA=TRUE)\n\nlabels=rownames(dataout2)\n\npdf(paste(\"Box_out_rule_2_\",name,\".pdf\",sep=\"\"))\nfor(i in 1:ncol(dataout2)){\n    b=boxplot(dataout2[,i] ~ groups, names=groupnames,main=colnames(dataout2)[i],notch=TRUE,outpch = NA)\n    text(groups,dataout2[,i],label=labels,col=\"red\",cex=0.5)\n}\ndev.off()\n\npdf(paste(\"Box_rest_\",name,\".pdf\",sep=\"\"))\nfor(i in 1:ncol(data3)){\n    b=boxplot(data3[,i] ~ groups, names=groupnames,main=colnames(data3)[i],notch=TRUE,outpch = NA)\n    stripchart(data3[,i] ~ groups, vertical = TRUE, method = \"jitter\",pch = unique(marks), col = unique(color), add = TRUE)\n}\ndev.off()\n}else{print(\"No questionable QCs in rule 2.\")}\n}\n",
    "created" : 1493987723596.000,
    "dirty" : false,
    "encoding" : "CP1250",
    "folds" : "",
    "hash" : "3534492970",
    "id" : "323D3FF1",
    "lastKnownWriteTime" : 1493987778,
    "last_content_update" : 1493987778944,
    "path" : "C:/Users/Alzbetka/Prace/Data/Labina/Package/MetaboAnal/R/bigQC.R",
    "project_path" : "R/bigQC.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}